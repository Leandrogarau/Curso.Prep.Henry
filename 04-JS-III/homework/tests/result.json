{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":11,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":12,"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeys":[],"unmatched":0,"updated":0},"startTime":1606002431860,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["devolverPrimerElemento(arr)"],"failureMessages":[],"fullName":"devolverPrimerElemento(arr) should return the first item in the array","location":null,"status":"passed","title":"should return the first item in the array"},{"ancestorTitles":["devolverUltimoElemento(arr)"],"failureMessages":[],"fullName":"devolverUltimoElemento(arr) should return the last item in the array","location":null,"status":"passed","title":"should return the last item in the array"},{"ancestorTitles":["obtenerLargoDelArray(arr)"],"failureMessages":[],"fullName":"obtenerLargoDelArray(arr) should return the length of the array","location":null,"status":"passed","title":"should return the length of the array"},{"ancestorTitles":["incrementarPorUno(arr)"],"failureMessages":[],"fullName":"incrementarPorUno(arr) should return the array with each value incremented by one","location":null,"status":"passed","title":"should return the array with each value incremented by one"},{"ancestorTitles":["agregarItemAlFinalDelArray(arr, item)"],"failureMessages":[],"fullName":"agregarItemAlFinalDelArray(arr, item) should return the array with the item added to the end","location":null,"status":"passed","title":"should return the array with the item added to the end"},{"ancestorTitles":["agregarItemAlComienzoDelArray(arr, item)"],"failureMessages":[],"fullName":"agregarItemAlComienzoDelArray(arr, item) should return the array with the item added to the front","location":null,"status":"passed","title":"should return the array with the item added to the front"},{"ancestorTitles":["dePalabrasAFrase(words)"],"failureMessages":[],"fullName":"dePalabrasAFrase(words) should return a string that has all of the words from the array separated by spaces","location":null,"status":"passed","title":"should return a string that has all of the words from the array separated by spaces"},{"ancestorTitles":["arrayContiene(arr, item)"],"failureMessages":[],"fullName":"arrayContiene(arr, item) should return true if the array contains the item","location":null,"status":"passed","title":"should return true if the array contains the item"},{"ancestorTitles":["agregarNumeros(numbers)"],"failureMessages":[],"fullName":"agregarNumeros(numbers) should add all of the numbers in the array together and return the sum","location":null,"status":"passed","title":"should add all of the numbers in the array together and return the sum"},{"ancestorTitles":["promedioResultadosTest(testScores)"],"failureMessages":[],"fullName":"promedioResultadosTest(testScores) should return the average test score","location":null,"status":"passed","title":"should return the average test score"},{"ancestorTitles":["numeroMasGrande(numbers)"],"failureMessages":[],"fullName":"numeroMasGrande(numbers) should return the largest number","location":null,"status":"passed","title":"should return the largest number"},{"ancestorTitles":["multiplicarArgumentos()"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected value to be:\n  25\nReceived:\n  undefined\n\nDifference:\n\n  Comparing two different types of values. Expected number but received undefined.\n    at Object.<anonymous> (C:\\Users\\TANOSHIBA\\Documents\\soyhenry\\Curso.Prep.Henry\\04-JS-III\\homework\\tests\\JSIII.test.js:109:21)\n    at Object.asyncFn (C:\\Users\\TANOSHIBA\\Documents\\soyhenry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\jasmine_async.js:82:37)\n    at C:\\Users\\TANOSHIBA\\Documents\\soyhenry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:52:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\TANOSHIBA\\Documents\\soyhenry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:39:19)\n    at C:\\Users\\TANOSHIBA\\Documents\\soyhenry\\Curso.Prep.Henry\\node_modules\\jest-jasmine2\\build\\queue_runner.js:73:82\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"multiplicarArgumentos() should return the product of all the arguments","location":null,"status":"failed","title":"should return the product of all the arguments"}],"endTime":1606002443621,"message":"  ● multiplicarArgumentos() › should return the product of all the arguments\n\n    expect(received).toBe(expected) // Object.is equality\n    \n    Expected value to be:\n      25\n    Received:\n      undefined\n    \n    Difference:\n    \n      Comparing two different types of values. Expected number but received undefined.\n\n      107 |     const product4 = multiplicarArgumentos(1);\n      108 |     const product5 = multiplicarArgumentos(10, 0, 10);\n    > 109 |     expect(product).toBe(25);\n      110 |     expect(product2).toBe(0);\n      111 |     expect(product3).toBe(81);\n      112 |     expect(product4).toBe(1);\n      \n      at Object.<anonymous> (04-JS-III/homework/tests/JSIII.test.js:109:21)\n","name":"C:\\Users\\TANOSHIBA\\Documents\\soyhenry\\Curso.Prep.Henry\\04-JS-III\\homework\\tests\\JSIII.test.js","startTime":1606002433562,"status":"failed","summary":""}],"wasInterrupted":false}